generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model HCInventory {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String          @unique
  password      String
  phoneNo       String
  inchargeName  String
  address       Address?        @relation(fields: [addressId], references: [id])
  type          HCInventoryType
  twoFactorAuth Boolean         @default(false)
  orders        String[]        @default([])
  suppliers     Supplier[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  addressId     String?         @unique @db.ObjectId
}

model Address {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  street    String?
  landmark  String?
  city      String
  state     String
  country   String
  zip       String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  inventory HCInventory?
}

model Product {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  category      String
  subCategoryId String
  unit_type     String
  price         Float
  status        ProductStatus? @default(available)
  ratings       Float          @default(0)
  reviews       Int            @default(0)
  supplierId    String         @db.ObjectId
  discount      Float          @default(0)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  supplier      Supplier       @relation(fields: [supplierId], references: [id])
}

model Supplier {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  companyName    String
  email          String        @unique
  password       String
  phoneNo        String
  inchargeName   String
  products       Product[]
  suppliedAssets String[]      @default([]) // This is fine, as it's a scalar array
  twoFactorAuth  Boolean       @default(false)
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  HCInventory    HCInventory?  @relation(fields: [hCInventoryId], references: [id])
  hCInventoryId  String?       @db.ObjectId
  ShopAddress    ShopAddress[]
}

model ShopAddress {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  street     String?
  landmark   String?
  city       String
  state      String
  country    String
  zip        String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  supplier   Supplier? @relation(fields: [supplierId], references: [id])
  supplierId String?   @db.ObjectId
}

enum ProductStatus {
  available
  out_of_stock
}

enum HCInventoryType {
  hospital
  chemist
  pharmacy
  clinic
}
